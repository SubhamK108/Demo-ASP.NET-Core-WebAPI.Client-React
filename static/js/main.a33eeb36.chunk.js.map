{"version":3,"sources":["components/Navbar.tsx","components/Home.tsx","components/Counter.tsx","shared/LoadingSpinner.tsx","components/GetFromApi.tsx","components/PostToApi.tsx","components/DeleteToApi.tsx","components/EditToApi.tsx","app/App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["Navbar","className","to","type","Home","style","textAlign","Counter","useState","count","setCount","fontSize","fontWeight","onClick","LoadingSpinnerSmall","margin","color","role","LoadingSpinner","marginTop","paddingLeft","FetchTable","props","history","useHistory","scope","users","map","user","name","username","email","cursor","title","push","GetFromApi","setUsers","useEffect","a","console","clear","fetch","response","ok","log","json","Error","fetchUsers","length","PostToApi","password","setUser","submitForm","e","preventDefault","method","headers","body","JSON","stringify","alert","onSubmit","htmlFor","required","placeholder","onInput","currentTarget","value","paddingTop","DeleteToApi","key","setKey","EditToApi","validUsername","setValidUsername","originalUsername","setOriginalUsername","checkerTimer","setCheckerTimer","params","useParams","getUserData","checkUsername","text","toLowerCase","startUsernameCheck","undefined","clearTimeout","prevState","timeOutId","setTimeout","EditForm","disabled","App","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.a33eeb36.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = (): ReactElement => {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark\">\n            <form className=\"container-fluid justify-content-start\">\n                <Link to=\"/\">\n                    <button className=\"btn btn-primary m-3\" type=\"button\">Home</button>\n                </Link>\n                <Link to=\"/counter\">\n                    <button className=\"btn btn-sm btn-secondary m-3\" type=\"button\">Counter</button>\n                </Link>\n                <Link to=\"/get_from_api\">\n                    <button className=\"btn btn-sm btn-secondary m-3\" type=\"button\">Get From API</button>\n                </Link>\n                <Link to=\"/post_to_api\">\n                    <button className=\"btn btn-sm btn-secondary m-3\" type=\"button\">Post To API</button>\n                </Link>\n                <Link to=\"/delete_to_api\">\n                    <button className=\"btn btn-sm btn-secondary m-3\" type=\"button\">Delete To API</button>\n                </Link>\n            </form>\n        </nav>\n    );\n}\n\nexport default Navbar;","import React, { ReactElement } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nconst Home = (): ReactElement => {\n    return (\n        <div style={{textAlign: 'center'}}>\n            <h1>This is a Demo App</h1>\n            <h2>Tech Stack</h2>\n            <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item\">ASP.NET Core with C# in the Backend</li>\n                <li className=\"list-group-item\">React with TypeScript in the Frontend</li>\n                <li className=\"list-group-item\">Bootstrap for styling</li>\n                <li className=\"list-group-item\">PostgreSQL as the Database</li>\n                <li className=\"list-group-item\">Docker</li>\n                <li className=\"list-group-item\">GitHub Pages</li>\n                <li className=\"list-group-item\">Heroku for Hosting</li>\n            </ul>\n        </div>\n    );\n}\n\nexport default Home;","import React, { ReactElement, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nconst Counter = (): ReactElement => {\n    const [count, setCount] = useState<number>(0);\n\n    const incrementCounter = (): void => {\n        setCount(count + 1);\n    };\n\n    const resetCounter = (): void => {\n        setCount(count - count);\n    };\n\n    return (\n        <div style={{textAlign: 'center'}}>\n            <span style={{fontSize: 25}} className=\"badge rounded-pill bg-success m-4\">{count}</span>\n            <button style={{fontSize: 25, fontWeight: \"bold\"}} className=\"btn btn-info m-2\" onClick={incrementCounter}>Increment</button>\n            <button style={{fontSize: 25, fontWeight: \"bold\"}} className=\"btn btn-warning m-2\" onClick={resetCounter}>Reset</button>\n        </div>\n    );\n}\n\nexport default Counter;","import { ReactElement } from \"react\";\n\nconst LoadingSpinner = (): ReactElement => {\n    return (\n        <div style={{ marginTop: 100 }} className=\"d-flex justify-content-center\">\n            <div className=\"spinner-border\" role=\"status\">\n            </div>\n            <h3 style={{ paddingLeft: 20 }}>Loading...</h3>\n        </div>\n    );\n}\n\nconst LoadingSpinnerSmall = (): ReactElement => {\n    return (\n        <div style={{ margin: 10, color: \"#196ce0\" }} className=\"d-flex justify-content-center\">\n            <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n            </div>\n        </div>\n    );\n}\n\nexport default LoadingSpinner;\nexport { LoadingSpinnerSmall };","import React, { ReactElement, useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { User } from \"../models/User\";\nimport { useHistory } from \"react-router\";\nimport LoadingSpinner from \"../shared/LoadingSpinner\";\n\ninterface FetchTableProps {\n    users: User[]\n};\n\nconst GetFromApi = (): ReactElement => {\n    const [users, setUsers] = useState<User[]>([]);\n\n    useEffect(() => {\n        const fetchUsers = async (): Promise<void> => {\n            console.clear();\n            try {\n                const response = await fetch(\"https://asp-net-core-api-demo.herokuapp.com/api/user/\");\n                if (response.ok) {\n                    console.log(\"Response Received 😃\");\n                    const json: User[] = await response.json();\n                    console.log(json);\n                    setUsers(json);\n                }\n                else {\n                    throw new Error();\n                }\n            }\n            catch (error) {\n                console.log(\"Bad Request 😥\");\n            }\n        };\n\n        fetchUsers();\n    }, []);\n\n    return (\n        <div style={{ textAlign: 'center' }}>\n            <h1>Fetching the list of Users from the ASP.NET Core Web API...</h1>\n            <br></br>\n            {users.length === 0 ? (\n                <LoadingSpinner />\n            ) : (\n                <FetchTable \n                    users={users}\n                />\n            )}\n        </div>\n    );\n}\n\nconst FetchTable = (props: FetchTableProps): ReactElement => {\n    const history = useHistory();\n\n    return (\n        <div style={{ textAlign: 'center' }}>\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Username</th>\n                        <th scope=\"col\">Email ID</th>\n                        <th scope=\"col\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.users.map((user: User) => (\n                        <tr key={user.email}>\n                            <td>{user.name}</td>\n                            <td>{user.username}</td>\n                            <td>{user.email}</td>\n                            <td>\n                                <i \n                                    style={{ cursor: \"pointer\", color: \"#196ce0\" }}\n                                    title=\"Edit User\"\n                                    onClick={() => history.push(`/edittoapi/${user.username}`)}\n                                    className=\"fas fa-user-edit\"\n                                >\n                                </i>\n                            </td>                \n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default GetFromApi;","import React, { ReactElement, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { User } from \"../models/User\";\n\nconst PostToApi = (): ReactElement => {\n    const [user, setUser] = useState<User>({ name: \"\", username: \"\", email: \"\", password: \"\" });\n    const history = useHistory();\n\n    const submitForm = async (e: React.FormEvent): Promise<void> => {\n        console.clear();\n        e.preventDefault();\n        console.log(user);\n        try {\n            const response = await fetch(\"https://asp-net-core-api-demo.herokuapp.com/api/user/adduser/\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(user)\n            });\n            if (response.ok) {\n                console.log(\"User Added 😃\");\n                alert(\"User Added 😃\");\n                history.push(\"/get_from_api\");\n            } \n            else {\n                throw new Error();\n            }\n        } \n        catch (error) {\n            console.log(\"Invalid Credentials! 😥\");\n            alert(\"Invalid Credentials! 😥\");\n        }\n    }\n\n    return (\n        <form style={{textAlign: 'center'}} className=\"row g-3\" onSubmit={submitForm}>\n            <div className=\"col-6\">\n                <label htmlFor=\"name\" className=\"form-label\">Name</label>\n                <input style={{textAlign: 'center'}} required type=\"text\" className=\"form-control\" placeholder=\"Your Name\" onInput={e => setUser({ ...user, name: e.currentTarget.value })} />\n            </div>\n            <div className=\"col-6\">\n                <label htmlFor=\"username\" className=\"form-label\">Username</label>\n                <input style={{textAlign: 'center'}} required type=\"text\" className=\"form-control\" placeholder=\"Your Username\" onInput={e => setUser({ ...user, username: e.currentTarget.value })} />\n            </div>\n            <div className=\"col-6\">\n                <label htmlFor=\"email\" className=\"form-label\">Email</label>\n                <input style={{textAlign: 'center'}} required type=\"email\" className=\"form-control\" placeholder=\"Your Email\" onInput={e => setUser({ ...user, email: e.currentTarget.value })} />\n            </div>\n            <div className=\"col-6\">\n                <label htmlFor=\"password\" className=\"form-label\">Password</label>\n                <input style={{textAlign: 'center'}} required type=\"password\" className=\"form-control\" placeholder=\"Your Password\" onInput={e => setUser({ ...user, password: e.currentTarget.value })} />\n            </div>\n            <div style={{ paddingTop: 20 }} className=\"col-12\">\n                <button type=\"submit\" className=\"btn btn-primary\">Sign Up</button>\n            </div>\n        </form>\n    );\n}\n\nexport default PostToApi;","import React, { ReactElement, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst DeleteToApi = (): ReactElement => {\n    const [key, setKey] = useState<string>(\"\");\n    const history = useHistory();\n\n    const submitForm = async (e: React.FormEvent): Promise<void> => {\n        console.clear();\n        e.preventDefault();\n        console.log(key);\n        try {\n            const response = await fetch(`https://asp-net-core-api-demo.herokuapp.com/api/user/deleteuser/${key}/`, {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            if (response.ok) {\n                console.log(\"User Deleted 😃\");\n                alert(\"User Deleted 😃\");\n                history.push(\"/get_from_api\");\n            }\n            else {\n                throw new Error();\n            }\n        }\n        catch (error) {\n            console.log(\"Invalid Username or Email! 😥\");\n            alert(\"Invalid Username or Email! 😥\");\n        }\n    }\n\n    return (\n        <form style={{ textAlign: 'center' }} className=\"row g-3\" onSubmit={submitForm}>\n            <div style={{ margin: 'auto' }} className=\"col-6\">\n                <label htmlFor=\"id\" className=\"form-label\">Email / Username</label>\n                <input style={{ textAlign: 'center' }} required type=\"text\" className=\"form-control\" placeholder=\"Email / Username\" onInput={e => setKey(e.currentTarget.value)} />\n            </div>\n            <div style={{ paddingTop: 20 }} className=\"col-12\">\n                <button type=\"submit\" className=\"btn btn-primary\">Delete User</button>\n            </div>\n        </form>\n    );\n}\n\nexport default DeleteToApi;","import React, { FormEvent, FormEventHandler, ReactElement, useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { User } from \"../models/User\";\nimport LoadingSpinner, { LoadingSpinnerSmall } from \"../shared/LoadingSpinner\";\n\ninterface EditApiParams {\n    username: string\n};\n\ninterface EditFormProps {\n    user: User,\n    validUsername: number,\n    startUsernameCheck: Function,\n    setUser: Function,\n    submitForm: FormEventHandler<HTMLFormElement>\n};\n\nconst EditToApi = (): ReactElement => {\n    const [user, setUser] = useState<User>({ name: \"\", username: \"\", email: \"\", password: \"\" });\n    const [validUsername, setValidUsername] = useState<number>(-1);\n    const [originalUsername, setOriginalUsername] = useState<string>(\"\");\n    const [checkerTimer, setCheckerTimer] = useState<NodeJS.Timeout>();\n    const history = useHistory();\n    const params = useParams<EditApiParams>();\n\n    useEffect(() => {\n        const getUserData = async (): Promise<void> => {\n            console.clear();\n            try {\n                const response = await fetch(`https://asp-net-core-api-demo.herokuapp.com/api/user/getuser/${params.username}`);\n                if (response.ok) {\n                    console.log(\"Response Received 😀\");\n                    const json: User = await response.json();\n                    console.log(json);\n                    setUser(json);\n                    setOriginalUsername(json.username);\n                }\n                else {\n                    throw new Error();\n                }\n            }\n            catch (error) {\n                console.log(\"Bad Request 😥\");\n            }\n        };\n\n        getUserData();\n    }, [params.username]);\n\n    const submitForm = async (e: FormEvent): Promise<void> => {\n        e.preventDefault();\n        console.log(user);\n        try {\n            const response = await fetch(`https://asp-net-core-api-demo.herokuapp.com/api/user/updateuser/${params.username}`, {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(user)\n            });\n            if (response.ok) {\n                console.log(\"User Updated 😃\");\n                alert(\"User Updated 😃\");\n                history.push(\"/get_from_api\");\n            }\n            else {\n                throw new Error();\n            }\n        }\n        catch (error) {\n            console.log(\"Invalid Credentials! 😥\");\n            alert(\"Invalid Credentials! 😥\");\n        }\n    }\n\n    const checkUsername = async (key: string): Promise<void> => {\n        try {\n            const response = await fetch(`https://asp-net-core-api-demo.herokuapp.com/api/user/checkforuser/${key}`);\n            if (response.ok) {\n                const result: string = await response.text();\n                if (result.toLowerCase() === \"false\" || key === originalUsername) {\n                    setValidUsername(1);\n                }\n                else {\n                    setValidUsername(0);\n                }\n            }\n            else {\n                throw new Error();\n            }\n        }\n        catch (error) {\n        }\n    }\n\n    const startUsernameCheck = (username: string): void => {\n        if (checkerTimer !== undefined) {\n            clearTimeout(checkerTimer);\n        }\n        setUser(prevState => ({\n            ...prevState,\n            username: username\n        }));\n        if (username === \"\") {\n            setValidUsername(-1);\n        }\n        else {\n            setValidUsername(100);\n            const timeOutId: NodeJS.Timeout = setTimeout(() => checkUsername(username), 350);\n            setCheckerTimer(timeOutId);\n        }\n    }\n\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {user.name === \"\" ? (\n                <LoadingSpinner />\n            ) : (\n                <EditForm\n                    user={user}\n                    validUsername={validUsername}\n                    startUsernameCheck={startUsernameCheck}\n                    setUser={setUser}\n                    submitForm={submitForm}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default EditToApi;\n\nconst EditForm = (props: EditFormProps): ReactElement => {\n    return (\n        <form style={{ textAlign: 'center' }} className=\"row g-3\" onSubmit={props.submitForm}>\n            <div className=\"col-6\">\n                <label htmlFor=\"name\" className=\"form-label\">Name</label>\n                <input\n                    style={{ textAlign: 'center' }}\n                    required\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={props.user.name}\n                    placeholder=\"Your Name\"\n                    onInput={e => props.setUser({ ...props.user, name: e.currentTarget.value })}\n                />\n            </div>\n            <div className=\"col-6\">\n                <label htmlFor=\"username\" className=\"form-label\">Username</label>\n                <input\n                    style={{ textAlign: 'center' }}\n                    required\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={props.user.username}\n                    placeholder=\"Your Username\"\n                    onInput={e => props.startUsernameCheck(e.currentTarget.value)}\n                />\n                {props.validUsername === -1 ? (\n                    <p></p>\n                ) : (\n                    props.validUsername === 100 ? (\n                        <LoadingSpinnerSmall />\n                    ) : (\n                        props.validUsername === 1 ? (\n                            <p style={{ color: \"darkgreen\", margin: 10 }}>{props.user.username} is available. ✅</p>\n                        ) : (\n                            <p style={{ color: \"darkred\", margin: 10 }}>{props.user.username} is not available. ❌</p>\n                        )\n                    )\n                )}\n            </div>\n            <div className=\"col-6\">\n                <label htmlFor=\"email\" className=\"form-label\">Email</label>\n                <input\n                    style={{ textAlign: 'center' }}\n                    required\n                    disabled\n                    type=\"email\"\n                    className=\"form-control\"\n                    value={props.user.email}\n                />\n            </div>\n            <div className=\"col-6\">\n                <label htmlFor=\"password\" className=\"form-label\">Password</label>\n                <input\n                    style={{ textAlign: 'center' }}\n                    required\n                    type=\"password\"\n                    className=\"form-control\"\n                    value={props.user.password}\n                    placeholder=\"Your Password\"\n                    onInput={e => props.setUser({ ...props.user, password: e.currentTarget.value })}\n                />\n            </div>\n            <div style={{ paddingTop: 20 }} className=\"col-12\">\n                <button type=\"submit\" className=\"btn btn-primary\">Update</button>\n            </div>\n        </form>\n    );\n}\n","import React, { ReactElement } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\"\nimport Navbar from \"../components/Navbar\";\nimport Home from \"../components/Home\";\nimport Counter from \"../components/Counter\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport GetFromApi from \"../components/GetFromApi\";\nimport PostToApi from \"../components/PostToApi\";\nimport DeleteToApi from \"../components/DeleteToApi\";\nimport EditToApi from \"../components/EditToApi\";\n\nconst App = (): ReactElement => {\n    return (\n        <Router>\n            <Navbar />\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/counter\" exact component={Counter} />\n                <Route path=\"/get_from_api\" exact component={GetFromApi} />\n                <Route path=\"/post_to_api\" exact component={PostToApi} />\n                <Route path=\"/delete_to_api\" exact component={DeleteToApi} />\n                <Route path=\"/edittoapi/:username\" component={EditToApi} />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}