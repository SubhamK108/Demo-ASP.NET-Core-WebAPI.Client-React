{"version":3,"sources":["components/Navbar.tsx","components/Home.tsx","components/Counter.tsx","components/GetFromApi.tsx","components/PostToApi.tsx","components/DeleteToApi.tsx","components/EditToApi.tsx","app/App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["Navbar","className","to","type","Home","Counter","useState","count","setCount","style","fontSize","fontWeight","onClick","FetchTable","props","history","useHistory","scope","users","map","user","cursor","e","push","username","name","email","TableLoadingSpinner","role","paddingLeft","GetFromApi","setUsers","useEffect","a","fetch","response","ok","console","log","json","Error","fetchUsers","length","PostToApi","password","setUser","SubmitForm","preventDefault","method","headers","body","JSON","stringify","alert","onSubmit","htmlFor","required","placeholder","onInput","currentTarget","value","paddingTop","DeleteToApi","key","setKey","EditToApi","params","useParams","GetUserData","submitForm","EditForm","FormLoadingSpinner","marginTop","App","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7d2e1863.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = (): ReactElement => {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark\">\n            <form className=\"container-fluid justify-content-start\">\n                <Link to=\"/\">\n                    <button className=\"btn btn-primary m-3\" type=\"button\">Home</button>\n                </Link>\n                <Link to=\"/counter\">\n                    <button className=\"btn btn-sm btn-secondary m-3\" type=\"button\">Counter</button>\n                </Link>\n                <Link to=\"/get_from_api\">\n                    <button className=\"btn btn-sm btn-secondary m-3\" type=\"button\">Get From API</button>\n                </Link>\n                <Link to=\"/post_to_api\">\n                    <button className=\"btn btn-sm btn-secondary m-3\" type=\"button\">Post To API</button>\n                </Link>\n                <Link to=\"/delete_to_api\">\n                    <button className=\"btn btn-sm btn-secondary m-3\" type=\"button\">Delete To API</button>\n                </Link>\n            </form>\n        </nav>\n    );\n}\n\nexport default Navbar;","import React, { ReactElement } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nconst Home = (): ReactElement => {\n    return (\n        <div>\n            <h1>This is a Demo App made in:</h1>\n            <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item\">ASP.NET Core with C# in the Backend</li>\n                <li className=\"list-group-item\">React with TypeScript in the Frontend</li>\n                <li className=\"list-group-item\">Bootstrap for styling</li>\n                <li className=\"list-group-item\">PostgreSQL as the Database</li>\n                <li className=\"list-group-item\">Docker</li>\n                <li className=\"list-group-item\">GitHub Pages</li>\n                <li className=\"list-group-item\">Heroku for Hosting</li>\n            </ul>\n        </div>\n    );\n}\n\nexport default Home;","import React, { ReactElement, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nconst Counter = (): ReactElement => {\n    const [count, setCount] = useState<number>(0);\n\n    const incrementCounter = (): void => {\n        setCount(count + 1);\n    };\n\n    const resetCounter = (): void => {\n        setCount(count - count);\n    };\n\n    return (\n        <div>\n            <span style={{fontSize: 25}} className=\"badge rounded-pill bg-success m-4\">{count}</span>\n            <button style={{fontSize: 25, fontWeight: \"bold\"}} className=\"btn btn-info m-2\" onClick={incrementCounter}>Increment</button>\n            <button style={{fontSize: 25, fontWeight: \"bold\"}} className=\"btn btn-warning m-2\" onClick={resetCounter}>Reset</button>\n        </div>\n    );\n}\n\nexport default Counter;","import React, { ReactElement, useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { User } from \"../models/User\";\nimport { useHistory } from \"react-router\";\n\ninterface FetchTableProps {\n    users: User[]\n};\n\nconst GetFromApi = (): ReactElement => {\n    const [users, setUsers] = useState<User[]>([]);\n\n    useEffect(() => {\n        const fetchUsers = async (): Promise<void> => {\n            try {\n                const response = await fetch(\"https://asp-net-core-api-demo.herokuapp.com/api/user/\");\n                if (response.ok) {\n                    console.log(\"Response Received 😃\");\n                    const json: User[] = await response.json();\n                    console.log(json);\n                    setUsers(json);\n                } else {\n                    throw new Error();\n                }\n            } catch (error) {\n                console.log(\"Bad Request 😥\");\n            }\n        };\n\n        fetchUsers();\n    }, []);\n\n    return (\n        <div>\n            <h1>Fetching the list of Users from the ASP.NET Core Web API...</h1>\n            <br></br>\n            {users.length === 0 ? <TableLoadingSpinner /> : <FetchTable users={users} />}\n        </div>\n    );\n}\n\nconst FetchTable = (props: FetchTableProps): ReactElement => {\n    const history = useHistory();\n\n    return (\n        <div>\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Username</th>\n                        <th scope=\"col\">Email ID</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.users.map((user: User) => (\n                        <tr style={{ cursor: \"pointer\" }} onClick={e => history.push(`/edittoapi/${user.username}`)} key={user.email}>\n                            <td>{user.name}</td>\n                            <td>{user.username}</td>\n                            <td>{user.email}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nconst TableLoadingSpinner = (): ReactElement => {\n    return (\n        <div className=\"d-flex justify-content-center\">\n            <div className=\"spinner-border\" role=\"status\">\n            </div>\n            <h3 style={{ paddingLeft: 20 }}>Loading...</h3>\n        </div>\n    );\n}\n\nexport default GetFromApi;","import React, { ReactElement, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { User } from \"../models/User\";\n\nconst PostToApi = (): ReactElement => {\n    const [user, setUser] = useState<User>({ name: \"\", username: \"\", email: \"\", password: \"\" });\n    const history = useHistory();\n\n    const SubmitForm = async (e: React.FormEvent): Promise<void> => {\n        e.preventDefault();\n        console.log(user);\n        try {\n            const response = await fetch(\"https://asp-net-core-api-demo.herokuapp.com/api/user/adduser/\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(user)\n            });\n            if (response.ok) {\n                console.log(\"User Added 😃\");\n                alert(\"User Added 😃\");\n                history.push(\"/get_from_api\");\n            } else {\n                throw new Error();\n            }\n        } catch (error) {\n            console.log(\"Invalid Credentials! 😥\");\n            alert(\"Invalid Credentials! 😥\");\n        }\n    }\n\n    return (\n        <form className=\"row g-3\" onSubmit={SubmitForm}>\n            <div className=\"col-6\">\n                <label htmlFor=\"name\" className=\"form-label\">Name</label>\n                <input required type=\"text\" className=\"form-control\" placeholder=\"Your Name\" onInput={e => setUser({ ...user, name: e.currentTarget.value })} />\n            </div>\n            <div className=\"col-6\">\n                <label htmlFor=\"username\" className=\"form-label\">Username</label>\n                <input required type=\"text\" className=\"form-control\" placeholder=\"Your Username\" onInput={e => setUser({ ...user, username: e.currentTarget.value })} />\n            </div>\n            <div className=\"col-md-6\">\n                <label htmlFor=\"email\" className=\"form-label\">Email</label>\n                <input required type=\"email\" className=\"form-control\" placeholder=\"Your Email\" onInput={e => setUser({ ...user, email: e.currentTarget.value })} />\n            </div>\n            <div className=\"col-9\">\n                <label htmlFor=\"password\" className=\"form-label\">Password</label>\n                <input required type=\"password\" className=\"form-control\" placeholder=\"Your Password\" onInput={e => setUser({ ...user, password: e.currentTarget.value })} />\n            </div>\n            <div style={{ paddingTop: 20 }} className=\"col-12\">\n                <button type=\"submit\" className=\"btn btn-primary\">Sign Up</button>\n            </div>\n        </form>\n    );\n}\n\nexport default PostToApi;","import React, { ReactElement, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst DeleteToApi = (): ReactElement => {\n    const [key, setKey] = useState<string>(\"\");\n    const history = useHistory();\n\n    const SubmitForm = async (e: React.FormEvent): Promise<void> => {\n        e.preventDefault();\n        console.log(key);\n        try {\n            const response = await fetch(`https://asp-net-core-api-demo.herokuapp.com/api/user/deleteuser/${key}/`, {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            if (response.ok) {\n                console.log(\"User Deleted 😃\");\n                alert(\"User Deleted 😃\");\n                history.push(\"/get_from_api\");\n            } else {\n                throw new Error();\n            }\n        } catch (error) {\n            console.log(\"Invalid Username or Email! 😥\");\n            alert(\"Invalid Username or Email! 😥\");\n        }\n    }\n\n    return (\n        <form className=\"row g-3\" onSubmit={SubmitForm}>\n            <div className=\"col-6\">\n                <label htmlFor=\"id\" className=\"form-label\">Email / Username</label>\n                <input required type=\"text\" className=\"form-control\" placeholder=\"Email / Username\" onInput={e => setKey(e.currentTarget.value)} />\n            </div>\n            <div style={{ paddingTop: 20 }} className=\"col-12\">\n                <button type=\"submit\" className=\"btn btn-primary\">Delete User</button>\n            </div>\n        </form>\n    );\n}\n\nexport default DeleteToApi;","import React, { FormEvent, FormEventHandler, ReactElement, useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { User } from \"../models/User\";\n\ninterface EditApiParams {\n    username: string\n};\n\ninterface EditFormProps {\n    user: User,\n    setUser: Function,\n    submitForm: FormEventHandler<HTMLFormElement>\n};\n\nconst EditToApi = (): ReactElement => {\n    const [user, setUser] = useState<User>({ name: \"\", username: \"\", email: \"\", password: \"\" });\n    const history = useHistory();\n    const params = useParams<EditApiParams>();\n\n    useEffect(() => {\n        const GetUserData = async (): Promise<void> => {\n            try {\n                const response = await fetch(`https://asp-net-core-api-demo.herokuapp.com/api/user/getuser/${params.username}`);\n                if (response.ok) {\n                    console.log(\"Response Received 😀\");\n                    const json: User = await response.json();\n                    console.log(json);\n                    setUser(json);\n                } else {\n                    throw new Error();\n                }\n            } catch (error) {\n                console.log(\"Bad Request 😥\");\n            }\n        };\n\n        GetUserData();\n    }, [params.username]);\n\n    const SubmitForm = async (e: FormEvent): Promise<void> => {\n        e.preventDefault();\n        console.log(user);\n        try {\n            const response = await fetch(\"https://asp-net-core-api-demo.herokuapp.com/api/user/adduser/\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(user)\n            });\n            if (response.ok) {\n                console.log(\"User Added 😃\");\n                alert(\"User Added 😃\");\n                history.push(\"/get_from_api\");\n            } else {\n                throw new Error();\n            }\n        } catch (error) {\n            console.log(\"Invalid Credentials! 😥\");\n            alert(\"Invalid Credentials! 😥\");\n        }\n    }\n\n    return (\n        <div>\n            {user.name === \"\" ? <FormLoadingSpinner /> : <EditForm user={user} setUser={setUser} submitForm={SubmitForm} />}\n        </div>\n    );\n}\n\nexport default EditToApi;\n\nconst EditForm = (props: EditFormProps): ReactElement => {\n    return (\n        <form className=\"row g-3\" onSubmit={props.submitForm}>\n            <div className=\"col-6\">\n                <label htmlFor=\"name\" className=\"form-label\">Name</label>\n                <input required type=\"text\" className=\"form-control\" value={props.user.name} placeholder=\"Your Name\" onInput={e => props.setUser({ ...props.user, name: e.currentTarget.value })} />\n            </div>\n            <div className=\"col-6\">\n                <label htmlFor=\"username\" className=\"form-label\">Username</label>\n                <input required type=\"text\" className=\"form-control\" value={props.user.username} placeholder=\"Your Username\" onInput={e => props.setUser({ ...props.user, username: e.currentTarget.value })} />\n            </div>\n            <div className=\"col-md-6\">\n                <label htmlFor=\"email\" className=\"form-label\">Email</label>\n                <input required type=\"email\" className=\"form-control\" value={props.user.email} placeholder=\"Your Email\" onInput={e => props.setUser({ ...props.user, email: e.currentTarget.value })} />\n            </div>\n            <div className=\"col-9\">\n                <label htmlFor=\"password\" className=\"form-label\">Password</label>\n                <input required type=\"password\" className=\"form-control\" value={props.user.password} placeholder=\"Your Password\" onInput={e => props.setUser({ ...props.user, password: e.currentTarget.value })} />\n            </div>\n            <div style={{ paddingTop: 20 }} className=\"col-12\">\n                <button type=\"submit\" className=\"btn btn-primary\">Sign Up</button>\n            </div>\n        </form>\n    );\n}\n\nconst FormLoadingSpinner = (): ReactElement => {\n    return (\n        <div style={{marginTop: 100}} className=\"d-flex justify-content-center\">\n            <div className=\"spinner-border\" role=\"status\">\n            </div>\n            <h3 style={{ paddingLeft: 20 }}>Loading...</h3>\n        </div>\n    );\n}","import React, { ReactElement } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Navbar from \"../components/Navbar\";\nimport Home from \"../components/Home\";\nimport Counter from \"../components/Counter\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport GetFromApi from \"../components/GetFromApi\";\nimport PostToApi from \"../components/PostToApi\";\nimport DeleteToApi from \"../components/DeleteToApi\";\nimport EditToApi from \"../components/EditToApi\";\n\nconst App = (): ReactElement => {\n    return (\n        <Router>\n            <Navbar />\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/counter\" exact component={Counter} />\n                <Route path=\"/get_from_api\" exact component={GetFromApi} />\n                <Route path=\"/post_to_api\" exact component={PostToApi} />\n                <Route path=\"/delete_to_api\" exact component={DeleteToApi} />\n                <Route path=\"/edittoapi/:username\" component={EditToApi} />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}